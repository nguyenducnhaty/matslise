//
// Created by toon on 5/16/18.
//

#ifndef SCHRODINGER_LEGENDRE_H
#define SCHRODINGER_LEGENDRE_H

#include <functional>
#include <iostream>

namespace legendre {
    template<class D>
    D *getCoefficients(int n, std::function<D(double)> V, double a, double b) {
        static double legendrePoints[10][16] = {{1,                       1,                       1,                       1,                       1,                        1,                       1,                       1,                       1,                      1,                       1,                       1,                       1,                        1,                       1,                        1},
                                                {-0.98940093499164993260, -0.94457502307323257608, -0.86563120238783174388, -0.75540440835500303389, -0.61787624440264374845,  -0.45801677765722738634, -0.28160355077925891323, -0.09501250983763744019, 0.09501250983763744019, 0.28160355077925891323,  0.45801677765722738634,  0.61787624440264374845,  0.75540440835500303389,   0.86563120238783174388,  0.94457502307323257608,   0.98940093499164993260},
                                                {0.96837131524352664401,  0.83833296132069678021,  0.62397606782110498211,  0.35595373024325826616,  0.072656580095673325125,  -0.18533094707673489811, -0.38104916028277002008, -0.4864589344615292730,  -0.4864589344615292730, -0.38104916028277002008, -0.18533094707673489811, 0.072656580095673325125, 0.35595373024325826616,   0.62397606782110498211,  0.83833296132069678021,   0.96837131524352664401},
                                                {-0.93724518454063179248, -0.69006394508875920580, -0.32313445482346942601, 0.055454577243060588091, 0.33709620486733831140,   0.44681899040523203034,  0.36657702811464426885,  0.1403744803853127548,   -0.1403744803853127548, -0.36657702811464426885, -0.44681899040523203034, -0.33709620486733831140, -0.055454577243060588091, 0.32313445482346942601,  0.69006394508875920580,   0.93724518454063179248},
                                                {0.89651622189396953288,  0.51193032100436350722,  0.021519665792279851706, -0.34027390387996794756, -0.41898897493693158272,  -0.21914032951000378391, 0.10513543289749142819,  0.3415038703736621037,   0.3415038703736621037,  0.10513543289749142819,  -0.21914032951000378391, -0.41898897493693158272, -0.34027390387996794756,  0.021519665792279851706, 0.51193032100436350722,   0.89651622189396953288},
                                                {-0.84682903108622948647, -0.31835071452324386976, 0.22497699434421564105,  0.41831627087592137521,  0.19631303781038983723,   -0.17678928668573871721, -0.34655334268168198690, -0.1707044360264941011,  0.1707044360264941011,  0.34655334268168198690,  0.17678928668573871721,  -0.19631303781038983723, -0.41831627087592137521,  -0.22497699434421564105, 0.31835071452324386976,   0.84682903108622948647},
                                                {0.78896777950213752937,  0.12468597727601452858,  -0.37496941605383685621, -0.29576799779490376121, 0.12677934780992021620,   0.33106645018055982315,  0.091303334280325882412, -0.2548516209813431131,  -0.2548516209813431131, 0.091303334280325882412, 0.33106645018055982315,  0.12677934780992021620,  -0.29576799779490376121,  -0.37496941605383685621, 0.12468597727601452858,   0.78896777950213752937},
                                                {-0.72384239668753330229, 0.054146558418323361508, 0.40996371116288619083,  0.056374316677758896977, -0.31374564880946707939,  -0.13007230471615555784, 0.24929608505469453035,  0.1912871162931606924,   -0.1912871162931606924, -0.24929608505469453035, 0.13007230471615555784,  0.31374564880946707939,  -0.056374316677758896977, -0.40996371116288619083, -0.054146558418323361508, 0.72384239668753330229},
                                                {0.65247258806545882305,  -0.20499801761774507147, -0.33729684888284324866, 0.17894935931482821645,  0.25254803913644040099,   -0.17797946040447256532, -0.21152041014547912253, 0.1889176639487679226,   0.1889176639487679226,  -0.21152041014547912253, -0.17797946040447256532, 0.25254803913644040099,  0.17894935931482821645,   -0.33729684888284324866, -0.20499801761774507147,  0.65247258806545882305},
                                                {-0.57596995935581177361, 0.31762662837940415790,  0.18709553525759011055,  -0.30544886963337671053, -0.015863687413683339403, 0.26959747553010343783,  -0.10908504499225227820, -0.2039376815800771194,  0.2039376815800771194,  0.10908504499225227820,  -0.26959747553010343783, 0.015863687413683339403, 0.30544886963337671053,   -0.18709553525759011055, -0.31762662837940415790,  0.57596995935581177361}};

        static double nodes[] = {-0.98940093499164993260, -0.94457502307323257608, -0.86563120238783174388,
                                 -0.75540440835500303389, -0.61787624440264374845, -0.45801677765722738634,
                                 -0.28160355077925891323, -0.09501250983763744019, 0.09501250983763744019,
                                 0.28160355077925891323, 0.45801677765722738634, 0.61787624440264374845,
                                 0.75540440835500303389, 0.86563120238783174388, 0.94457502307323257608,
                                 0.98940093499164993260};
        static double weigths[] = {0.02715245941175409485, 0.06225352393864789286, 0.09515851168249278481,
                                   0.12462897125553387205, 0.14959598881657673208, 0.16915651939500253819,
                                   0.18260341504492358887, 0.18945061045506849628, 0.18945061045506849628,
                                   0.18260341504492358887, 0.16915651939500253819, 0.14959598881657673208,
                                   0.12462897125553387205, 0.09515851168249278481, 0.06225352393864789286,
                                   0.02715245941175409485};
        double m = (a + b) / 2;
        double h = (b - a) / 2;
        D aV[16];
        for (int j = 0; j < 16; ++j)
            aV[j] = V(m + nodes[j] * h);

        D zero = aV[0] * 0;

        D *coeffs = new D[n];
        double H = 1;
        for (int i = 0; i < n; ++i) {
            coeffs[i] = zero;
            for (int j = 0; j < 16; ++j)
                coeffs[i] += aV[j] * weigths[j] * legendrePoints[i][j] * (i + .5) / H;
            H *= h * 2;
        }

        return coeffs;
    }
};


#endif //SCHRODINGER_LEGENDRE_H
