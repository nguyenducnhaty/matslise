#include "matscs_formulas.h"

void calculate_tcoeff_matrix(int n, double h, MatrixXd *vs, Array2D<Matrix2D<MatrixXd>, MATSCS_ETA_delta, MATSCS_HMAX_delta> &tDelta, Matrix2D<MatrixXd> *tH) {
    MatrixXd zero = MatrixXd::Zero(n, n);
    MatrixXd I = MatrixXd::Identity(n, n);
    MatrixXd &v0 = vs[0];
    MatrixXd &v1 = vs[1];
    MatrixXd &v2 = vs[2];
    MatrixXd &v3 = vs[3];
    MatrixXd &v4 = vs[4];
    tDelta[0][0] = {(I), zero, zero, (I)}; 
    MatrixXd tmp_poly_1 = (0.5*v4);
    tmp_poly_1 *= h;
    tmp_poly_1 += (-0.5*v3);
    tmp_poly_1 *= h;
    tmp_poly_1 += (0.5*v2);
    tmp_poly_1 *= h;
    tmp_poly_1 += (-0.5*v1);
    tmp_poly_1 *= h;
    tDelta[0][1] = {zero, zero, tmp_poly_1, zero}; 
    MatrixXd tmp_poly_2 = (-5.0*v4);
    tmp_poly_2 *= h;
    tmp_poly_2 += (3.0*v3);
    tmp_poly_2 *= h;
    tmp_poly_2 += (-1.5*v2);
    tmp_poly_2 *= h;
    tmp_poly_2 += (0.5*v1);
    tDelta[0][2] = {zero, zero, tmp_poly_2, zero}; 
    MatrixXd tmp_poly_3 = (15.0*v4);
    tmp_poly_3 *= h;
    tmp_poly_3 += (-5.0*v3);
    tmp_poly_3 *= h;
    tmp_poly_3 += v2;
    tDelta[0][3] = {zero, zero, tmp_poly_3, zero}; 
    MatrixXd tmp_poly_4 = (-17.5*v4);
    tmp_poly_4 *= h;
    tmp_poly_4 += (2.5*v3);
    tDelta[0][4] = {zero, zero, tmp_poly_4, zero}; 
    tDelta[0][5] = {zero, zero, ((7.0*v4)), zero}; 
    tDelta[0][6] = {zero, zero, zero, zero}; 
    tH[0] = {(I), zero, zero, (I)}; 
    tDelta[1][0] = {zero, zero, zero, zero}; 
    MatrixXd tmp_poly_5 = (0.5*v4);
    tmp_poly_5 *= h;
    tmp_poly_5 += (-0.5*v3);
    tmp_poly_5 *= h;
    tmp_poly_5 += (0.5*v2);
    tmp_poly_5 *= h;
    tmp_poly_5 += (-0.5*v1);
    tmp_poly_5 *= h;
    tDelta[1][1] = {zero, (I), tmp_poly_5, zero}; 
    MatrixXd tmp_poly_6 = (0.5*v4);
    tmp_poly_6 *= h;
    tmp_poly_6 += (-0.5*v3);
    tmp_poly_6 *= h;
    tmp_poly_6 += (0.5*v2);
    tmp_poly_6 *= h;
    tmp_poly_6 += (-0.5*v1);
    tmp_poly_6 *= h;
    MatrixXd tmp_poly_7 = (-5.0*v4);
    tmp_poly_7 *= h;
    tmp_poly_7 += (3.0*v3);
    tmp_poly_7 *= h;
    tmp_poly_7 += (-1.5*v2);
    tmp_poly_7 *= h;
    tmp_poly_7 += (0.5*v1);
    MatrixXd tmp_poly_8 = (0.5*v4);
    tmp_poly_8 *= h;
    tmp_poly_8 += (-0.5*v3);
    tmp_poly_8 *= h;
    tmp_poly_8 += (0.5*v2);
    tmp_poly_8 *= h;
    tmp_poly_8 += (-0.5*v1);
    tmp_poly_8 *= h;
    tDelta[1][2] = {tmp_poly_6, zero, tmp_poly_7, tmp_poly_8}; 
    MatrixXd tmp_poly_9 = (-5.0*v4);
    tmp_poly_9 *= h;
    tmp_poly_9 += (3.0*v3);
    tmp_poly_9 *= h;
    tmp_poly_9 += (-1.5*v2);
    tmp_poly_9 *= h;
    tmp_poly_9 += (0.5*v1);
    MatrixXd tmp_sot_11 = (-0.125*(v2*v1));
    tmp_sot_11 += (0.125*(v3*v0));
    tmp_sot_11 += (-0.125*(v0*v3));
    tmp_sot_11 += (-0.125*(v1*v2));
    MatrixXd tmp_sot_12 = (22.5*v4);
    tmp_sot_12 += (0.125*(v0*v2));
    tmp_sot_12 += (0.125*(v1*v1));
    tmp_sot_12 += (-0.125*(v2*v0));
    MatrixXd tmp_sot_13 = (0.125*(v1*v0));
    tmp_sot_13 += (-0.125*(v0*v1));
    tmp_sot_13 += (-7.5*v3);
    MatrixXd tmp_poly_10 = tmp_sot_11;
    tmp_poly_10 *= h;
    tmp_poly_10 += tmp_sot_12;
    tmp_poly_10 *= h;
    tmp_poly_10 += tmp_sot_13;
    tmp_poly_10 *= h;
    tmp_poly_10 += (1.5*v2);
    MatrixXd tmp_poly_14 = (-5.0*v4);
    tmp_poly_14 *= h;
    tmp_poly_14 += (3.0*v3);
    tmp_poly_14 *= h;
    tmp_poly_14 += (-1.5*v2);
    tmp_poly_14 *= h;
    tmp_poly_14 += (0.5*v1);
    tDelta[1][3] = {tmp_poly_9, zero, tmp_poly_10, tmp_poly_14}; 
    MatrixXd tmp_poly_15 = (15.0*v4);
    tmp_poly_15 *= h;
    tmp_poly_15 += (-5.0*v3);
    tmp_poly_15 *= h;
    tmp_poly_15 += v2;
    MatrixXd tmp_sot_17 = (0.5833333333333334*(v2*v1));
    tmp_sot_17 += (-0.5*(v3*v0));
    tmp_sot_17 += (0.5*(v0*v3));
    tmp_sot_17 += (0.4166666666666667*(v1*v2));
    MatrixXd tmp_sot_18 = (-35.0*v4);
    tmp_sot_18 += (-0.25*(v0*v2));
    tmp_sot_18 += (-0.25*(v1*v1));
    tmp_sot_18 += (0.25*(v2*v0));
    MatrixXd tmp_sot_19 = (-0.08333333333333333*(v1*v0));
    tmp_sot_19 += (0.08333333333333333*(v0*v1));
    tmp_sot_19 += (5.0*v3);
    MatrixXd tmp_poly_16 = tmp_sot_17;
    tmp_poly_16 *= h;
    tmp_poly_16 += tmp_sot_18;
    tmp_poly_16 *= h;
    tmp_poly_16 += tmp_sot_19;
    MatrixXd tmp_poly_20 = (15.0*v4);
    tmp_poly_20 *= h;
    tmp_poly_20 += (-5.0*v3);
    tmp_poly_20 *= h;
    tmp_poly_20 += v2;
    tDelta[1][4] = {tmp_poly_15, zero, tmp_poly_16, tmp_poly_20}; 
    MatrixXd tmp_poly_21 = (-17.5*v4);
    tmp_poly_21 *= h;
    tmp_poly_21 += (2.5*v3);
    MatrixXd tmp_sot_23 = (-0.75*(v2*v1));
    tmp_sot_23 += (0.625*(v3*v0));
    tmp_sot_23 += (-0.625*(v0*v3));
    tmp_sot_23 += (-0.5*(v1*v2));
    MatrixXd tmp_sot_24 = (17.5*v4);
    tmp_sot_24 += (0.125*(v0*v2));
    tmp_sot_24 += (0.125*(v1*v1));
    tmp_sot_24 += (-0.125*(v2*v0));
    MatrixXd tmp_poly_22 = tmp_sot_23;
    tmp_poly_22 *= h;
    tmp_poly_22 += tmp_sot_24;
    MatrixXd tmp_poly_25 = (-17.5*v4);
    tmp_poly_25 *= h;
    tmp_poly_25 += (2.5*v3);
    tDelta[1][5] = {tmp_poly_21, zero, tmp_poly_22, tmp_poly_25}; 
    tDelta[1][6] = {((7.0*v4)), zero, ((0.3*(v2*v1))+(-0.25*(v3*v0))+(0.25*(v0*v3))+(0.2*(v1*v2))), ((7.0*v4))}; 
    MatrixXd tmp_poly_26 = I;
    tmp_poly_26 *= h;
    MatrixXd tmp_sot_28 = (-0.001984126984126984*(v3*v4));
    tmp_sot_28 += (0.001984126984126984*(v4*v3));
    MatrixXd tmp_sot_29 = (0.0035714285714285713*(v3*v2));
    tmp_sot_29 += (-0.0035714285714285713*(v2*v3));
    MatrixXd tmp_sot_30 = (0.008333333333333333*(v2*v1));
    tmp_sot_30 += (-0.008333333333333333*(v1*v2));
    MatrixXd tmp_sot_31 = (0.041666666666666664*(v1*v0));
    tmp_sot_31 += (-0.041666666666666664*(v0*v1));
    MatrixXd tmp_poly_27 = tmp_sot_28;
    tmp_poly_27 *= h*h;
    tmp_poly_27 += tmp_sot_29;
    tmp_poly_27 *= h*h;
    tmp_poly_27 += tmp_sot_30;
    tmp_poly_27 *= h;
    tmp_poly_27 += (0.5*v4);
    tmp_poly_27 *= h;
    tmp_poly_27 += tmp_sot_31;
    tmp_poly_27 *= h;
    tmp_poly_27 += (0.5*v2);
    tmp_poly_27 *= h*h*h;
    tH[1] = {zero, tmp_poly_26, tmp_poly_27, zero}; 
    tDelta[2][0] = {zero, zero, zero, zero}; 
    tDelta[2][1] = {zero, zero, zero, zero}; 
    tDelta[2][2] = {zero, zero, zero, zero}; 
    MatrixXd tmp_poly_32 = (5.0*v4);
    tmp_poly_32 *= h;
    tmp_poly_32 += (-3.0*v3);
    tmp_poly_32 *= h;
    tmp_poly_32 += (1.5*v2);
    tmp_poly_32 *= h;
    tmp_poly_32 += (-0.5*v1);
    MatrixXd tmp_poly_33 = (-0.5*v3);
    tmp_poly_33 *= h;
    tmp_poly_33 += (0.5*v2);
    tmp_poly_33 *= h;
    tmp_poly_33 += (-0.5*v1);
    tmp_poly_33 *= h;
    MatrixXd tmp_sot_35 = (-0.125*(v2*v1));
    tmp_sot_35 += (0.125*(v3*v0));
    tmp_sot_35 += (-0.125*(v0*v3));
    tmp_sot_35 += (-0.125*(v1*v2));
    MatrixXd tmp_sot_36 = (-22.5*v4);
    tmp_sot_36 += (0.125*(v0*v2));
    tmp_sot_36 += (0.125*(v1*v1));
    tmp_sot_36 += (-0.125*(v2*v0));
    MatrixXd tmp_sot_37 = (0.125*(v1*v0));
    tmp_sot_37 += (-0.125*(v0*v1));
    tmp_sot_37 += (7.5*v3);
    MatrixXd tmp_poly_34 = tmp_sot_35;
    tmp_poly_34 *= h;
    tmp_poly_34 += tmp_sot_36;
    tmp_poly_34 *= h;
    tmp_poly_34 += tmp_sot_37;
    tmp_poly_34 *= h;
    tmp_poly_34 += (-1.5*v2);
    MatrixXd tmp_poly_38 = (-5.0*v4);
    tmp_poly_38 *= h;
    tmp_poly_38 += (3.0*v3);
    tmp_poly_38 *= h;
    tmp_poly_38 += (-1.5*v2);
    tmp_poly_38 *= h;
    tmp_poly_38 += (0.5*v1);
    tDelta[2][3] = {tmp_poly_32, tmp_poly_33, tmp_poly_34, tmp_poly_38}; 
    MatrixXd tmp_sot_40 = (-22.5*v4);
    tmp_sot_40 += (0.125*(v0*v2));
    tmp_sot_40 += (0.125*(v1*v1));
    tmp_sot_40 += (-0.125*(v2*v0));
    MatrixXd tmp_sot_41 = (0.125*(v1*v0));
    tmp_sot_41 += (-0.125*(v0*v1));
    tmp_sot_41 += (7.5*v3);
    MatrixXd tmp_poly_39 = tmp_sot_40;
    tmp_poly_39 *= h;
    tmp_poly_39 += tmp_sot_41;
    tmp_poly_39 *= h;
    tmp_poly_39 += (-1.5*v2);
    MatrixXd tmp_poly_42 = (3.0*v3);
    tmp_poly_42 *= h;
    tmp_poly_42 += (-1.5*v2);
    tmp_poly_42 *= h;
    tmp_poly_42 += (0.5*v1);
    MatrixXd tmp_sot_44 = (0.75*(v2*v1));
    tmp_sot_44 += (0.25*(v1*v2));
    MatrixXd tmp_sot_45 = (52.5*v4);
    tmp_sot_45 += (-0.25*(v1*v1));
    MatrixXd tmp_poly_43 = tmp_sot_44;
    tmp_poly_43 *= h;
    tmp_poly_43 += tmp_sot_45;
    tmp_poly_43 *= h;
    tmp_poly_43 += (-7.5*v3);
    MatrixXd tmp_sot_47 = (22.5*v4);
    tmp_sot_47 += (0.125*(v0*v2));
    tmp_sot_47 += (0.125*(v1*v1));
    tmp_sot_47 += (-0.125*(v2*v0));
    MatrixXd tmp_sot_48 = (0.125*(v1*v0));
    tmp_sot_48 += (-0.125*(v0*v1));
    tmp_sot_48 += (-7.5*v3);
    MatrixXd tmp_poly_46 = tmp_sot_47;
    tmp_poly_46 *= h;
    tmp_poly_46 += tmp_sot_48;
    tmp_poly_46 *= h;
    tmp_poly_46 += (1.5*v2);
    tDelta[2][4] = {tmp_poly_39, tmp_poly_42, tmp_poly_43, tmp_poly_46}; 
    MatrixXd tmp_sot_50 = (35.0*v4);
    tmp_sot_50 += (-0.25*(v0*v2));
    tmp_sot_50 += (-0.25*(v1*v1));
    tmp_sot_50 += (0.25*(v2*v0));
    MatrixXd tmp_sot_51 = (-0.08333333333333333*(v1*v0));
    tmp_sot_51 += (0.08333333333333333*(v0*v1));
    tmp_sot_51 += (-5.0*v3);
    MatrixXd tmp_poly_49 = tmp_sot_50;
    tmp_poly_49 *= h;
    tmp_poly_49 += tmp_sot_51;
    MatrixXd tmp_poly_52 = (-5.0*v3);
    tmp_poly_52 *= h;
    tmp_poly_52 += v2;
    MatrixXd tmp_sot_54 = (-1.0*(v2*v1));
    tmp_sot_54 += (-0.020833333333333332*(v0*v0*v1));
    tmp_sot_54 += (-0.020833333333333332*(v1*v0*v0));
    tmp_sot_54 += (0.041666666666666664*(v0*v1*v0));
    tmp_sot_54 += (-0.25*(v1*v2));
    MatrixXd tmp_sot_55 = (-35.0*v4);
    tmp_sot_55 += (0.08333333333333333*(v1*v1));
    MatrixXd tmp_poly_53 = tmp_sot_54;
    tmp_poly_53 *= h;
    tmp_poly_53 += tmp_sot_55;
    MatrixXd tmp_sot_57 = (-35.0*v4);
    tmp_sot_57 += (-0.25*(v0*v2));
    tmp_sot_57 += (-0.25*(v1*v1));
    tmp_sot_57 += (0.25*(v2*v0));
    MatrixXd tmp_sot_58 = (-0.08333333333333333*(v1*v0));
    tmp_sot_58 += (0.08333333333333333*(v0*v1));
    tmp_sot_58 += (5.0*v3);
    MatrixXd tmp_poly_56 = tmp_sot_57;
    tmp_poly_56 *= h;
    tmp_poly_56 += tmp_sot_58;
    tDelta[2][5] = {tmp_poly_49, tmp_poly_52, tmp_poly_53, tmp_poly_56}; 
    tDelta[2][6] = {((-17.5*v4)+(0.125*(v0*v2))+(0.125*(v1*v1))+(-0.125*(v2*v0))), ((2.5*v3)), ((0.375*(v2*v1))+(0.010416666666666666*(v0*v0*v1))+(0.010416666666666666*(v1*v0*v0))+(-0.020833333333333332*(v0*v1*v0))+(0.125*(v1*v2))), ((17.5*v4)+(0.125*(v0*v2))+(0.125*(v1*v1))+(-0.125*(v2*v0)))}; 
    MatrixXd tmp_sot_60 = (-0.001984126984126984*(v3*v4));
    tmp_sot_60 += (0.001984126984126984*(v4*v3));
    MatrixXd tmp_sot_61 = (0.0035714285714285713*(v3*v2));
    tmp_sot_61 += (-0.0035714285714285713*(v2*v3));
    MatrixXd tmp_sot_62 = (0.008333333333333333*(v2*v1));
    tmp_sot_62 += (-0.008333333333333333*(v1*v2));
    MatrixXd tmp_sot_63 = (0.041666666666666664*(v1*v0));
    tmp_sot_63 += (-0.041666666666666664*(v0*v1));
    tmp_sot_63 += (-0.5*v3);
    MatrixXd tmp_poly_59 = tmp_sot_60;
    tmp_poly_59 *= h*h;
    tmp_poly_59 += tmp_sot_61;
    tmp_poly_59 *= h*h;
    tmp_poly_59 += tmp_sot_62;
    tmp_poly_59 *= h*h;
    tmp_poly_59 += tmp_sot_63;
    tmp_poly_59 *= h*h;
    tmp_poly_59 += (-0.5*v1);
    tmp_poly_59 *= h*h*h;
    MatrixXd tmp_sot_65 = (4.5093795093795094E-5*(v0*v4*v4));
    tmp_sot_65 += (-4.5093795093795094E-5*(v4*v4*v0));
    MatrixXd tmp_sot_66 = (4.96031746031746E-4*(v3*v4*v0));
    tmp_sot_66 += (-4.96031746031746E-4*(v4*v3*v0));
    tmp_sot_66 += (-4.96031746031746E-4*(v0*v3*v4));
    tmp_sot_66 += (4.96031746031746E-4*(v0*v4*v3));
    MatrixXd tmp_sot_67 = (9.92063492063492E-5*(v2*v0*v4));
    tmp_sot_67 += (9.92063492063492E-5*(v4*v1*v1));
    tmp_sot_67 += (2.9761904761904765E-4*(v0*v2*v4));
    tmp_sot_67 += (9.92063492063492E-5*(v4*v0*v2));
    tmp_sot_67 += (-2.9761904761904765E-4*(v1*v2*v3));
    tmp_sot_67 += (9.92063492063492E-5*(v3*v3*v0));
    tmp_sot_67 += (-1.984126984126984E-4*(v3*v0*v3));
    tmp_sot_67 += (-0.013888888888888888*(v4*v4));
    tmp_sot_67 += (-9.92063492063492E-5*(v2*v1*v3));
    tmp_sot_67 += (-1.984126984126984E-4*(v1*v4*v1));
    tmp_sot_67 += (-3.968253968253968E-4*(v0*v4*v2));
    tmp_sot_67 += (3.968253968253968E-4*(v1*v3*v2));
    tmp_sot_67 += (9.92063492063492E-5*(v1*v1*v4));
    tmp_sot_67 += (-2.9761904761904765E-4*(v3*v2*v1));
    tmp_sot_67 += (9.92063492063492E-5*(v0*v3*v3));
    tmp_sot_67 += (3.968253968253968E-4*(v2*v3*v1));
    tmp_sot_67 += (-3.968253968253968E-4*(v2*v4*v0));
    tmp_sot_67 += (2.9761904761904765E-4*(v4*v2*v0));
    tmp_sot_67 += (-9.92063492063492E-5*(v3*v1*v2));
    MatrixXd tmp_sot_68 = (8.928571428571428E-4*(v2*v3*v0));
    tmp_sot_68 += (-8.928571428571428E-4*(v3*v2*v0));
    tmp_sot_68 += (-8.928571428571428E-4*(v0*v2*v3));
    tmp_sot_68 += (8.928571428571428E-4*(v0*v3*v2));
    MatrixXd tmp_sot_69 = (-5.952380952380953E-4*(v2*v0*v2));
    tmp_sot_69 += (-0.017857142857142856*(v3*v3));
    tmp_sot_69 += (2.9761904761904765E-4*(v1*v0*v3));
    tmp_sot_69 += (0.0011904761904761906*(v1*v2*v1));
    tmp_sot_69 += (5.952380952380953E-4*(v3*v1*v0));
    tmp_sot_69 += (2.9761904761904765E-4*(v2*v2*v0));
    tmp_sot_69 += (2.9761904761904765E-4*(v3*v0*v1));
    tmp_sot_69 += (-5.952380952380953E-4*(v1*v1*v2));
    tmp_sot_69 += (-8.928571428571428E-4*(v1*v3*v0));
    tmp_sot_69 += (5.952380952380953E-4*(v0*v1*v3));
    tmp_sot_69 += (2.9761904761904765E-4*(v0*v2*v2));
    tmp_sot_69 += (-5.952380952380953E-4*(v2*v1*v1));
    tmp_sot_69 += (-8.928571428571428E-4*(v0*v3*v1));
    MatrixXd tmp_sot_70 = (-0.0020833333333333333*(v2*v1*v0));
    tmp_sot_70 += (0.0020833333333333333*(v0*v2*v1));
    tmp_sot_70 += (0.0020833333333333333*(v1*v2*v0));
    tmp_sot_70 += (-0.0020833333333333333*(v0*v1*v2));
    MatrixXd tmp_sot_71 = (-0.125*(v4*v0));
    tmp_sot_71 += (-0.004166666666666667*(v1*v0*v1));
    tmp_sot_71 += (0.125*(v0*v4));
    tmp_sot_71 += (0.0020833333333333333*(v2*v0*v0));
    tmp_sot_71 += (-0.025*(v2*v2));
    tmp_sot_71 += (0.0020833333333333333*(v0*v0*v2));
    tmp_sot_71 += (0.0020833333333333333*(v1*v1*v0));
    tmp_sot_71 += (-0.004166666666666667*(v0*v2*v0));
    tmp_sot_71 += (0.0020833333333333333*(v0*v1*v1));
    MatrixXd tmp_sot_72 = (0.125*(v3*v0));
    tmp_sot_72 += (-0.010416666666666666*(v0*v0*v1));
    tmp_sot_72 += (-0.010416666666666666*(v1*v0*v0));
    tmp_sot_72 += (0.020833333333333332*(v0*v1*v0));
    tmp_sot_72 += (-0.125*(v0*v3));
    MatrixXd tmp_sot_73 = (0.125*(v0*v2));
    tmp_sot_73 += (-5.0*v4);
    tmp_sot_73 += (-0.125*(v2*v0));
    tmp_sot_73 += (-0.041666666666666664*(v1*v1));
    MatrixXd tmp_sot_74 = (0.125*(v1*v0));
    tmp_sot_74 += (-0.125*(v0*v1));
    MatrixXd tmp_poly_64 = tmp_sot_65;
    tmp_poly_64 *= h;
    tmp_poly_64 += tmp_sot_66;
    tmp_poly_64 *= h;
    tmp_poly_64 += tmp_sot_67;
    tmp_poly_64 *= h;
    tmp_poly_64 += tmp_sot_68;
    tmp_poly_64 *= h;
    tmp_poly_64 += tmp_sot_69;
    tmp_poly_64 *= h;
    tmp_poly_64 += tmp_sot_70;
    tmp_poly_64 *= h;
    tmp_poly_64 += tmp_sot_71;
    tmp_poly_64 *= h;
    tmp_poly_64 += tmp_sot_72;
    tmp_poly_64 *= h;
    tmp_poly_64 += tmp_sot_73;
    tmp_poly_64 *= h;
    tmp_poly_64 += tmp_sot_74;
    tmp_poly_64 *= h;
    tmp_poly_64 += (-1.5*v2);
    tmp_poly_64 *= h*h*h;
    MatrixXd tmp_sot_76 = (-0.001984126984126984*(v3*v4));
    tmp_sot_76 += (0.001984126984126984*(v4*v3));
    MatrixXd tmp_sot_77 = (0.0035714285714285713*(v3*v2));
    tmp_sot_77 += (-0.0035714285714285713*(v2*v3));
    MatrixXd tmp_sot_78 = (0.008333333333333333*(v2*v1));
    tmp_sot_78 += (-0.008333333333333333*(v1*v2));
    MatrixXd tmp_sot_79 = (0.041666666666666664*(v1*v0));
    tmp_sot_79 += (-0.041666666666666664*(v0*v1));
    tmp_sot_79 += (0.5*v3);
    MatrixXd tmp_poly_75 = tmp_sot_76;
    tmp_poly_75 *= h*h;
    tmp_poly_75 += tmp_sot_77;
    tmp_poly_75 *= h*h;
    tmp_poly_75 += tmp_sot_78;
    tmp_poly_75 *= h*h;
    tmp_poly_75 += tmp_sot_79;
    tmp_poly_75 *= h*h;
    tmp_poly_75 += (0.5*v1);
    tmp_poly_75 *= h*h*h;
    tH[2] = {tmp_poly_59, zero, tmp_poly_64, tmp_poly_75}; 
    MatrixXd tmp_sot_81 = (4.5093795093795094E-5*(v0*v4*v4));
    tmp_sot_81 += (-4.5093795093795094E-5*(v4*v4*v0));
    MatrixXd tmp_sot_82 = (4.96031746031746E-4*(v3*v4*v0));
    tmp_sot_82 += (-4.96031746031746E-4*(v4*v3*v0));
    tmp_sot_82 += (-4.96031746031746E-4*(v0*v3*v4));
    tmp_sot_82 += (4.96031746031746E-4*(v0*v4*v3));
    MatrixXd tmp_sot_83 = (9.92063492063492E-5*(v2*v0*v4));
    tmp_sot_83 += (9.92063492063492E-5*(v4*v1*v1));
    tmp_sot_83 += (2.9761904761904765E-4*(v0*v2*v4));
    tmp_sot_83 += (9.92063492063492E-5*(v4*v0*v2));
    tmp_sot_83 += (-2.9761904761904765E-4*(v1*v2*v3));
    tmp_sot_83 += (9.92063492063492E-5*(v3*v3*v0));
    tmp_sot_83 += (-1.984126984126984E-4*(v3*v0*v3));
    tmp_sot_83 += (-0.013888888888888888*(v4*v4));
    tmp_sot_83 += (-9.92063492063492E-5*(v2*v1*v3));
    tmp_sot_83 += (-1.984126984126984E-4*(v1*v4*v1));
    tmp_sot_83 += (-3.968253968253968E-4*(v0*v4*v2));
    tmp_sot_83 += (3.968253968253968E-4*(v1*v3*v2));
    tmp_sot_83 += (9.92063492063492E-5*(v1*v1*v4));
    tmp_sot_83 += (-2.9761904761904765E-4*(v3*v2*v1));
    tmp_sot_83 += (9.92063492063492E-5*(v0*v3*v3));
    tmp_sot_83 += (3.968253968253968E-4*(v2*v3*v1));
    tmp_sot_83 += (-3.968253968253968E-4*(v2*v4*v0));
    tmp_sot_83 += (2.9761904761904765E-4*(v4*v2*v0));
    tmp_sot_83 += (-9.92063492063492E-5*(v3*v1*v2));
    MatrixXd tmp_sot_84 = (8.928571428571428E-4*(v2*v3*v0));
    tmp_sot_84 += (0.001984126984126984*(v4*v3));
    tmp_sot_84 += (-0.001984126984126984*(v3*v4));
    tmp_sot_84 += (-8.928571428571428E-4*(v3*v2*v0));
    tmp_sot_84 += (-8.928571428571428E-4*(v0*v2*v3));
    tmp_sot_84 += (8.928571428571428E-4*(v0*v3*v2));
    MatrixXd tmp_sot_85 = (-5.952380952380953E-4*(v2*v0*v2));
    tmp_sot_85 += (-0.017857142857142856*(v3*v3));
    tmp_sot_85 += (2.9761904761904765E-4*(v1*v0*v3));
    tmp_sot_85 += (0.0011904761904761906*(v1*v2*v1));
    tmp_sot_85 += (5.952380952380953E-4*(v3*v1*v0));
    tmp_sot_85 += (2.9761904761904765E-4*(v2*v2*v0));
    tmp_sot_85 += (2.9761904761904765E-4*(v3*v0*v1));
    tmp_sot_85 += (-5.952380952380953E-4*(v1*v1*v2));
    tmp_sot_85 += (-8.928571428571428E-4*(v1*v3*v0));
    tmp_sot_85 += (5.952380952380953E-4*(v0*v1*v3));
    tmp_sot_85 += (2.9761904761904765E-4*(v0*v2*v2));
    tmp_sot_85 += (-5.952380952380953E-4*(v2*v1*v1));
    tmp_sot_85 += (-8.928571428571428E-4*(v0*v3*v1));
    MatrixXd tmp_sot_86 = (-0.0020833333333333333*(v2*v1*v0));
    tmp_sot_86 += (0.0020833333333333333*(v0*v2*v1));
    tmp_sot_86 += (0.0035714285714285713*(v3*v2));
    tmp_sot_86 += (-0.0035714285714285713*(v2*v3));
    tmp_sot_86 += (0.0020833333333333333*(v1*v2*v0));
    tmp_sot_86 += (-0.0020833333333333333*(v0*v1*v2));
    MatrixXd tmp_sot_87 = (-0.125*(v4*v0));
    tmp_sot_87 += (-0.004166666666666667*(v1*v0*v1));
    tmp_sot_87 += (0.125*(v0*v4));
    tmp_sot_87 += (0.0020833333333333333*(v2*v0*v0));
    tmp_sot_87 += (-0.025*(v2*v2));
    tmp_sot_87 += (0.0020833333333333333*(v0*v0*v2));
    tmp_sot_87 += (0.0020833333333333333*(v1*v1*v0));
    tmp_sot_87 += (-0.004166666666666667*(v0*v2*v0));
    tmp_sot_87 += (0.0020833333333333333*(v0*v1*v1));
    MatrixXd tmp_sot_88 = (0.008333333333333333*(v2*v1));
    tmp_sot_88 += (0.125*(v3*v0));
    tmp_sot_88 += (-0.008333333333333333*(v1*v2));
    tmp_sot_88 += (-0.010416666666666666*(v0*v0*v1));
    tmp_sot_88 += (-0.010416666666666666*(v1*v0*v0));
    tmp_sot_88 += (0.020833333333333332*(v0*v1*v0));
    tmp_sot_88 += (-0.125*(v0*v3));
    MatrixXd tmp_sot_89 = (0.125*(v0*v2));
    tmp_sot_89 += (-0.125*(v2*v0));
    tmp_sot_89 += (-0.041666666666666664*(v1*v1));
    MatrixXd tmp_sot_90 = (0.16666666666666666*(v1*v0));
    tmp_sot_90 += (-0.16666666666666666*(v0*v1));
    tmp_sot_90 += (2.5*v3);
    MatrixXd tmp_poly_80 = tmp_sot_81;
    tmp_poly_80 *= h;
    tmp_poly_80 += tmp_sot_82;
    tmp_poly_80 *= h;
    tmp_poly_80 += tmp_sot_83;
    tmp_poly_80 *= h;
    tmp_poly_80 += tmp_sot_84;
    tmp_poly_80 *= h;
    tmp_poly_80 += tmp_sot_85;
    tmp_poly_80 *= h;
    tmp_poly_80 += tmp_sot_86;
    tmp_poly_80 *= h;
    tmp_poly_80 += tmp_sot_87;
    tmp_poly_80 *= h;
    tmp_poly_80 += tmp_sot_88;
    tmp_poly_80 *= h;
    tmp_poly_80 += tmp_sot_89;
    tmp_poly_80 *= h;
    tmp_poly_80 += tmp_sot_90;
    tmp_poly_80 *= h*h*h*h*h;
    MatrixXd tmp_sot_92 = (-0.001984126984126984*(v3*v4));
    tmp_sot_92 += (0.001984126984126984*(v4*v3));
    MatrixXd tmp_sot_93 = (0.0035714285714285713*(v3*v2));
    tmp_sot_93 += (-0.0035714285714285713*(v2*v3));
    MatrixXd tmp_sot_94 = (0.008333333333333333*(v2*v1));
    tmp_sot_94 += (-0.008333333333333333*(v1*v2));
    MatrixXd tmp_sot_95 = (0.041666666666666664*(v1*v0));
    tmp_sot_95 += (-0.041666666666666664*(v0*v1));
    MatrixXd tmp_poly_91 = tmp_sot_92;
    tmp_poly_91 *= h*h;
    tmp_poly_91 += tmp_sot_93;
    tmp_poly_91 *= h*h;
    tmp_poly_91 += tmp_sot_94;
    tmp_poly_91 *= h;
    tmp_poly_91 += (-0.5*v4);
    tmp_poly_91 *= h;
    tmp_poly_91 += tmp_sot_95;
    tmp_poly_91 *= h;
    tmp_poly_91 += (-0.5*v2);
    tmp_poly_91 *= h*h*h*h*h;
    MatrixXd tmp_sot_97 = (1.1273448773448773E-5*(v4*v4*v0*v0));
    tmp_sot_97 += (1.1273448773448773E-5*(v0*v0*v4*v4));
    tmp_sot_97 += (-2.2546897546897547E-5*(v0*v4*v4*v0));
    MatrixXd tmp_sot_98 = (1.6233766233766234E-4*(v0*v3*v4*v0));
    tmp_sot_98 += (-1.443001443001443E-4*(v0*v4*v3*v0));
    tmp_sot_98 += (-8.116883116883117E-5*(v0*v0*v3*v4));
    tmp_sot_98 += (7.215007215007215E-5*(v0*v0*v4*v3));
    tmp_sot_98 += (-8.116883116883117E-5*(v3*v4*v0*v0));
    tmp_sot_98 += (7.215007215007215E-5*(v4*v3*v0*v0));
    MatrixXd tmp_sot_99 = (2.48015873015873E-5*(v0*v1*v3*v2));
    tmp_sot_99 += (-2.48015873015873E-5*(v0*v3*v1*v2));
    tmp_sot_99 += (0.003427128427128427*(v4*v4*v0));
    tmp_sot_99 += (-1.7361111111111112E-4*(v0*v2*v4*v0));
    tmp_sot_99 += (-2.48015873015873E-5*(v1*v3*v2*v0));
    tmp_sot_99 += (-2.48015873015873E-5*(v2*v0*v4*v0));
    tmp_sot_99 += (-2.48015873015873E-5*(v0*v2*v1*v3));
    tmp_sot_99 += (2.48015873015873E-5*(v3*v1*v2*v0));
    tmp_sot_99 += (4.96031746031746E-5*(v3*v0*v3*v0));
    tmp_sot_99 += (2.48015873015873E-5*(v0*v0*v3*v3));
    tmp_sot_99 += (-7.440476190476191E-5*(v0*v3*v2*v1));
    tmp_sot_99 += (7.440476190476191E-5*(v0*v0*v2*v4));
    tmp_sot_99 += (-0.003427128427128427*(v0*v4*v4));
    tmp_sot_99 += (-2.48015873015873E-5*(v3*v3*v0*v0));
    tmp_sot_99 += (-2.48015873015873E-5*(v1*v1*v4*v0));
    tmp_sot_99 += (-9.92063492063492E-5*(v2*v3*v1*v0));
    tmp_sot_99 += (-2.48015873015873E-5*(v4*v0*v2*v0));
    tmp_sot_99 += (2.48015873015873E-5*(v2*v1*v3*v0));
    tmp_sot_99 += (1.7361111111111112E-4*(v0*v4*v2*v0));
    tmp_sot_99 += (2.48015873015873E-5*(v0*v4*v1*v1));
    tmp_sot_99 += (-9.92063492063492E-5*(v0*v0*v4*v2));
    tmp_sot_99 += (-7.440476190476191E-5*(v4*v2*v0*v0));
    tmp_sot_99 += (9.92063492063492E-5*(v0*v2*v3*v1));
    tmp_sot_99 += (-2.48015873015873E-5*(v4*v1*v1*v0));
    tmp_sot_99 += (2.48015873015873E-5*(v0*v4*v0*v2));
    tmp_sot_99 += (-4.96031746031746E-5*(v0*v3*v0*v3));
    tmp_sot_99 += (4.96031746031746E-5*(v1*v4*v1*v0));
    tmp_sot_99 += (2.48015873015873E-5*(v0*v2*v0*v4));
    tmp_sot_99 += (7.440476190476191E-5*(v3*v2*v1*v0));
    tmp_sot_99 += (-4.96031746031746E-5*(v0*v1*v4*v1));
    tmp_sot_99 += (2.48015873015873E-5*(v0*v1*v1*v4));
    tmp_sot_99 += (9.92063492063492E-5*(v2*v4*v0*v0));
    MatrixXd tmp_sot_100 = (3.306878306878307E-5*(v1*v1*v3*v0));
    tmp_sot_100 += (-1.4880952380952382E-4*(v2*v3*v0*v0));
    tmp_sot_100 += (6.613756613756614E-5*(v0*v1*v4*v0));
    tmp_sot_100 += (1.240079365079365E-4*(v0*v0*v3*v2));
    tmp_sot_100 += (-2.48015873015873E-5*(v0*v0*v1*v4));
    tmp_sot_100 += (-0.001488095238095238*(v3*v4*v0));
    tmp_sot_100 += (-4.96031746031746E-5*(v3*v0*v2*v0));
    tmp_sot_100 += (-4.1335978835978834E-5*(v1*v4*v0*v0));
    tmp_sot_100 += (-3.306878306878307E-5*(v0*v4*v0*v1));
    tmp_sot_100 += (4.96031746031746E-5*(v0*v0*v4*v1));
    tmp_sot_100 += (8.267195767195768E-6*(v0*v1*v3*v1));
    tmp_sot_100 += (7.440476190476191E-5*(v0*v2*v1*v2));
    tmp_sot_100 += (-7.440476190476191E-5*(v0*v2*v2*v1));
    tmp_sot_100 += (-1.4880952380952382E-4*(v0*v0*v2*v3));
    tmp_sot_100 += (0.00248015873015873*(v0*v4*v3));
    tmp_sot_100 += (7.440476190476191E-5*(v2*v2*v1*v0));
    tmp_sot_100 += (-1.6534391534391536E-5*(v0*v1*v0*v4));
    tmp_sot_100 += (1.6534391534391536E-5*(v1*v0*v4*v0));
    tmp_sot_100 += (4.96031746031746E-5*(v0*v3*v1*v1));
    tmp_sot_100 += (2.48015873015873E-5*(v1*v2*v2*v0));
    tmp_sot_100 += (2.9761904761904765E-4*(v0*v2*v3*v0));
    tmp_sot_100 += (-2.9761904761904765E-4*(v0*v3*v2*v0));
    tmp_sot_100 += (-0.00248015873015873*(v4*v3*v0));
    tmp_sot_100 += (3.306878306878307E-5*(v4*v0*v1*v0));
    tmp_sot_100 += (-7.440476190476191E-5*(v2*v1*v2*v0));
    tmp_sot_100 += (-4.96031746031746E-5*(v3*v1*v1*v0));
    tmp_sot_100 += (-3.306878306878307E-5*(v0*v1*v1*v3));
    tmp_sot_100 += (-6.613756613756614E-5*(v0*v4*v1*v0));
    tmp_sot_100 += (-2.48015873015873E-5*(v0*v1*v2*v2));
    tmp_sot_100 += (1.6534391534391536E-5*(v4*v1*v0*v0));
    tmp_sot_100 += (1.7361111111111112E-4*(v3*v2*v0*v0));
    tmp_sot_100 += (4.96031746031746E-5*(v0*v3*v0*v2));
    tmp_sot_100 += (-8.267195767195768E-6*(v1*v3*v1*v0));
    tmp_sot_100 += (0.001488095238095238*(v0*v3*v4));
    MatrixXd tmp_sot_101 = (9.92063492063492E-5*(v2*v0*v4));
    tmp_sot_101 += (-7.440476190476191E-5*(v1*v0*v3*v0));
    tmp_sot_101 += (-1.4880952380952382E-4*(v0*v2*v1*v1));
    tmp_sot_101 += (7.440476190476191E-5*(v0*v3*v0*v1));
    tmp_sot_101 += (-1.7361111111111112E-4*(v1*v0*v1*v2));
    tmp_sot_101 += (1.7361111111111112E-4*(v1*v2*v0*v1));
    tmp_sot_101 += (9.92063492063492E-5*(v4*v1*v1));
    tmp_sot_101 += (2.9761904761904765E-4*(v0*v2*v4));
    tmp_sot_101 += (-1.4880952380952382E-4*(v0*v2*v0*v2));
    tmp_sot_101 += (9.92063492063492E-5*(v4*v0*v2));
    tmp_sot_101 += (8.928571428571428E-4*(v1*v2*v3));
    tmp_sot_101 += (3.224206349206349E-4*(v2*v1*v1*v0));
    tmp_sot_101 += (-1.984126984126984E-4*(v3*v0*v3));
    tmp_sot_101 += (-1.4880952380952382E-4*(v3*v1*v0*v0));
    tmp_sot_101 += (-0.1388888888888889*(v4*v4));
    tmp_sot_101 += (-7.440476190476191E-5*(v3*v0*v1*v0));
    tmp_sot_101 += (1.4880952380952382E-4*(v0*v0*v1*v3));
    tmp_sot_101 += (-0.0021825396825396826*(v2*v1*v3));
    tmp_sot_101 += (7.440476190476191E-5*(v0*v0*v2*v2));
    tmp_sot_101 += (-1.984126984126984E-4*(v1*v4*v1));
    tmp_sot_101 += (1.240079365079365E-4*(v0*v1*v2*v1));
    tmp_sot_101 += (-3.968253968253968E-4*(v0*v4*v2));
    tmp_sot_101 += (0.0012896825396825397*(v1*v3*v2));
    tmp_sot_101 += (9.92063492063492E-5*(v1*v1*v4));
    tmp_sot_101 += (8.928571428571428E-4*(v3*v2*v1));
    tmp_sot_101 += (-0.0021825396825396826*(v3*v1*v2));
    tmp_sot_101 += (-3.720238095238095E-4*(v0*v1*v3*v0));
    tmp_sot_101 += (3.720238095238095E-4*(v0*v3*v1*v0));
    tmp_sot_101 += (-7.440476190476191E-5*(v2*v2*v0*v0));
    tmp_sot_101 += (2.232142857142857E-4*(v1*v3*v0*v0));
    tmp_sot_101 += (-2.232142857142857E-4*(v0*v0*v3*v1));
    tmp_sot_101 += (-4.7123015873015874E-4*(v1*v2*v1*v0));
    tmp_sot_101 += (-1.7361111111111112E-4*(v2*v1*v0*v1));
    tmp_sot_101 += (0.004563492063492064*(v3*v3*v0));
    tmp_sot_101 += (1.4880952380952382E-4*(v2*v0*v2*v0));
    tmp_sot_101 += (2.48015873015873E-5*(v0*v1*v1*v2));
    tmp_sot_101 += (1.4880952380952382E-4*(v1*v1*v2*v0));
    tmp_sot_101 += (0.0012896825396825397*(v2*v3*v1));
    tmp_sot_101 += (-0.004365079365079365*(v0*v3*v3));
    tmp_sot_101 += (1.7361111111111112E-4*(v1*v0*v2*v1));
    tmp_sot_101 += (7.440476190476191E-5*(v0*v1*v0*v3));
    tmp_sot_101 += (-3.968253968253968E-4*(v2*v4*v0));
    tmp_sot_101 += (2.9761904761904765E-4*(v4*v2*v0));
    MatrixXd tmp_sot_102 = (-0.0035714285714285713*(v2*v3*v0));
    tmp_sot_102 += (-7.440476190476191E-5*(v0*v1*v0*v2));
    tmp_sot_102 += (-0.125*(v4*v3));
    tmp_sot_102 += (-0.0017857142857142857*(v3*v0*v2));
    tmp_sot_102 += (0.0017857142857142857*(v0*v2*v3));
    tmp_sot_102 += (7.440476190476191E-5*(v2*v0*v1*v0));
    tmp_sot_102 += (-8.18452380952381E-4*(v0*v2*v1*v0));
    tmp_sot_102 += (0.010416666666666666*(v4*v1*v0));
    tmp_sot_102 += (-2.232142857142857E-4*(v1*v2*v0*v0));
    tmp_sot_102 += (-0.001488095238095238*(v3*v1*v1));
    tmp_sot_102 += (-2.232142857142857E-4*(v0*v3*v0*v0));
    tmp_sot_102 += (0.010416666666666666*(v1*v0*v4));
    tmp_sot_102 += (0.125*(v3*v4));
    tmp_sot_102 += (7.440476190476191E-5*(v3*v0*v0*v0));
    tmp_sot_102 += (-7.440476190476191E-5*(v0*v0*v0*v3));
    tmp_sot_102 += (0.0017857142857142857*(v2*v0*v3));
    tmp_sot_102 += (0.001488095238095238*(v1*v1*v3));
    tmp_sot_102 += (-7.440476190476191E-5*(v0*v1*v1*v1));
    tmp_sot_102 += (-0.003273809523809524*(v1*v2*v2));
    tmp_sot_102 += (-3.720238095238095E-4*(v1*v0*v2*v0));
    tmp_sot_102 += (-2.232142857142857E-4*(v1*v1*v0*v1));
    tmp_sot_102 += (7.440476190476191E-5*(v1*v1*v1*v0));
    tmp_sot_102 += (2.232142857142857E-4*(v1*v0*v0*v2));
    tmp_sot_102 += (-0.010416666666666666*(v4*v0*v1));
    tmp_sot_102 += (3.720238095238095E-4*(v2*v1*v0*v0));
    tmp_sot_102 += (2.232142857142857E-4*(v0*v0*v3*v0));
    tmp_sot_102 += (3.720238095238095E-4*(v0*v2*v0*v1));
    tmp_sot_102 += (-3.720238095238095E-4*(v0*v0*v1*v2));
    tmp_sot_102 += (2.232142857142857E-4*(v1*v0*v1*v1));
    tmp_sot_102 += (-2.232142857142857E-4*(v2*v0*v0*v1));
    tmp_sot_102 += (0.0035714285714285713*(v0*v3*v2));
    tmp_sot_102 += (-0.0017857142857142857*(v3*v2*v0));
    tmp_sot_102 += (0.003273809523809524*(v2*v2*v1));
    tmp_sot_102 += (8.18452380952381E-4*(v0*v1*v2*v0));
    tmp_sot_102 += (-0.010416666666666666*(v0*v1*v4));
    tmp_sot_102 += (2.232142857142857E-4*(v0*v0*v2*v1));
    MatrixXd tmp_sot_103 = (-5.208333333333333E-4*(v1*v1*v0*v0));
    tmp_sot_103 += (-0.125*(v2*v4));
    tmp_sot_103 += (0.005357142857142857*(v1*v2*v1));
    tmp_sot_103 += (0.011011904761904763*(v3*v1*v0));
    tmp_sot_103 += (5.208333333333333E-4*(v0*v0*v0*v2));
    tmp_sot_103 += (-0.0015625*(v0*v0*v2*v0));
    tmp_sot_103 += (0.006547619047619048*(v2*v2*v0));
    tmp_sot_103 += (-0.0625*(v0*v4*v0));
    tmp_sot_103 += (-0.01011904761904762*(v3*v0*v1));
    tmp_sot_103 += (-0.0026785714285714286*(v1*v1*v2));
    tmp_sot_103 += (-8.928571428571428E-4*(v1*v3*v0));
    tmp_sot_103 += (-1.7361111111111112E-4*(v0*v1*v0*v1));
    tmp_sot_103 += (-8.928571428571428E-4*(v0*v3*v1));
    tmp_sot_103 += (-5.952380952380953E-4*(v2*v0*v2));
    tmp_sot_103 += (0.0019097222222222222*(v1*v0*v1*v0));
    tmp_sot_103 += (-0.26785714285714285*(v3*v3));
    tmp_sot_103 += (-0.01011904761904762*(v1*v0*v3));
    tmp_sot_103 += (-5.208333333333333E-4*(v2*v0*v0*v0));
    tmp_sot_103 += (0.03125*(v0*v0*v4));
    tmp_sot_103 += (5.208333333333333E-4*(v0*v0*v1*v1));
    tmp_sot_103 += (-8.680555555555555E-4*(v1*v0*v0*v1));
    tmp_sot_103 += (0.0015625*(v0*v2*v0*v0));
    tmp_sot_103 += (0.03125*(v4*v0*v0));
    tmp_sot_103 += (0.011011904761904763*(v0*v1*v3));
    tmp_sot_103 += (-0.005952380952380952*(v0*v2*v2));
    tmp_sot_103 += (-0.0026785714285714286*(v2*v1*v1));
    tmp_sot_103 += (-0.125*(v4*v2));
    tmp_sot_103 += (-8.680555555555555E-4*(v0*v1*v1*v0));
    MatrixXd tmp_sot_104 = (0.008333333333333333*(v2*v1*v0));
    tmp_sot_104 += (0.0015625*(v1*v0*v0*v0));
    tmp_sot_104 += (-0.0046875*(v0*v1*v0*v0));
    tmp_sot_104 += (0.00625*(v0*v2*v1));
    tmp_sot_104 += (-0.03125*(v3*v0*v0));
    tmp_sot_104 += (0.0046875*(v0*v0*v1*v0));
    tmp_sot_104 += (-0.125*(v4*v1));
    tmp_sot_104 += (-0.00625*(v1*v2*v0));
    tmp_sot_104 += (-0.008333333333333333*(v0*v1*v2));
    tmp_sot_104 += (0.125*(v1*v4));
    tmp_sot_104 += (-0.03125*(v0*v0*v3));
    tmp_sot_104 += (-0.0015625*(v0*v0*v0*v1));
    tmp_sot_104 += (-0.014583333333333334*(v2*v0*v1));
    tmp_sot_104 += (0.0625*(v0*v3*v0));
    tmp_sot_104 += (0.014583333333333334*(v1*v0*v2));
    MatrixXd tmp_sot_105 = (1.25*(v4*v0));
    tmp_sot_105 += (-0.025*(v1*v0*v1));
    tmp_sot_105 += (-1.25*(v0*v4));
    tmp_sot_105 += (0.03333333333333333*(v2*v0*v0));
    tmp_sot_105 += (-0.25*(v1*v3));
    tmp_sot_105 += (-0.25*(v3*v1));
    tmp_sot_105 += (0.03333333333333333*(v0*v0*v2));
    tmp_sot_105 += (-0.15*(v2*v2));
    tmp_sot_105 += (0.022916666666666665*(v1*v1*v0));
    tmp_sot_105 += (-0.06666666666666667*(v0*v2*v0));
    tmp_sot_105 += (0.0020833333333333333*(v0*v1*v1));
    MatrixXd tmp_sot_106 = (-0.125*(v2*v1));
    tmp_sot_106 += (-0.625*(v3*v0));
    tmp_sot_106 += (0.125*(v1*v2));
    tmp_sot_106 += (-0.03125*(v0*v0*v1));
    tmp_sot_106 += (-0.03125*(v1*v0*v0));
    tmp_sot_106 += (0.0625*(v0*v1*v0));
    tmp_sot_106 += (0.625*(v0*v3));
    MatrixXd tmp_sot_107 = (-0.375*(v0*v2));
    tmp_sot_107 += (17.5*v4);
    tmp_sot_107 += (0.375*(v2*v0));
    tmp_sot_107 += (-0.2916666666666667*(v1*v1));
    MatrixXd tmp_poly_96 = tmp_sot_97;
    tmp_poly_96 *= h;
    tmp_poly_96 += tmp_sot_98;
    tmp_poly_96 *= h;
    tmp_poly_96 += tmp_sot_99;
    tmp_poly_96 *= h;
    tmp_poly_96 += tmp_sot_100;
    tmp_poly_96 *= h;
    tmp_poly_96 += tmp_sot_101;
    tmp_poly_96 *= h;
    tmp_poly_96 += tmp_sot_102;
    tmp_poly_96 *= h;
    tmp_poly_96 += tmp_sot_103;
    tmp_poly_96 *= h;
    tmp_poly_96 += tmp_sot_104;
    tmp_poly_96 *= h;
    tmp_poly_96 += tmp_sot_105;
    tmp_poly_96 *= h;
    tmp_poly_96 += tmp_sot_106;
    tmp_poly_96 *= h;
    tmp_poly_96 += tmp_sot_107;
    tmp_poly_96 *= h*h*h*h*h;
    MatrixXd tmp_sot_109 = (4.96031746031746E-4*(v3*v4*v0));
    tmp_sot_109 += (-4.96031746031746E-4*(v4*v3*v0));
    tmp_sot_109 += (-4.96031746031746E-4*(v0*v3*v4));
    tmp_sot_109 += (4.96031746031746E-4*(v0*v4*v3));
    MatrixXd tmp_sot_110 = (-3.968253968253968E-4*(v0*v4*v2));
    tmp_sot_110 += (2.9761904761904765E-4*(v0*v2*v4));
    tmp_sot_110 += (9.92063492063492E-5*(v0*v3*v3));
    tmp_sot_110 += (-9.92063492063492E-5*(v3*v3*v0));
    tmp_sot_110 += (-2.9761904761904765E-4*(v2*v4*v0));
    tmp_sot_110 += (3.968253968253968E-4*(v4*v2*v0));
    MatrixXd tmp_sot_111 = (8.928571428571428E-4*(v2*v3*v0));
    tmp_sot_111 += (0.001984126984126984*(v4*v3));
    tmp_sot_111 += (-0.001984126984126984*(v3*v4));
    tmp_sot_111 += (-8.928571428571428E-4*(v3*v2*v0));
    tmp_sot_111 += (-8.928571428571428E-4*(v0*v2*v3));
    tmp_sot_111 += (8.928571428571428E-4*(v0*v3*v2));
    MatrixXd tmp_sot_112 = (-5.952380952380953E-4*(v2*v0*v2));
    tmp_sot_112 += (-0.017857142857142856*(v3*v3));
    tmp_sot_112 += (2.9761904761904765E-4*(v1*v0*v3));
    tmp_sot_112 += (0.0011904761904761906*(v1*v2*v1));
    tmp_sot_112 += (5.952380952380953E-4*(v3*v1*v0));
    tmp_sot_112 += (2.9761904761904765E-4*(v2*v2*v0));
    tmp_sot_112 += (2.9761904761904765E-4*(v3*v0*v1));
    tmp_sot_112 += (-5.952380952380953E-4*(v1*v1*v2));
    tmp_sot_112 += (-8.928571428571428E-4*(v1*v3*v0));
    tmp_sot_112 += (5.952380952380953E-4*(v0*v1*v3));
    tmp_sot_112 += (2.9761904761904765E-4*(v0*v2*v2));
    tmp_sot_112 += (-5.952380952380953E-4*(v2*v1*v1));
    tmp_sot_112 += (-8.928571428571428E-4*(v0*v3*v1));
    MatrixXd tmp_sot_113 = (-0.0020833333333333333*(v2*v1*v0));
    tmp_sot_113 += (0.0020833333333333333*(v0*v2*v1));
    tmp_sot_113 += (0.0035714285714285713*(v3*v2));
    tmp_sot_113 += (-0.0035714285714285713*(v2*v3));
    tmp_sot_113 += (0.0020833333333333333*(v1*v2*v0));
    tmp_sot_113 += (-0.0020833333333333333*(v0*v1*v2));
    MatrixXd tmp_sot_114 = (0.125*(v4*v0));
    tmp_sot_114 += (-0.004166666666666667*(v1*v0*v1));
    tmp_sot_114 += (-0.125*(v0*v4));
    tmp_sot_114 += (0.0020833333333333333*(v2*v0*v0));
    tmp_sot_114 += (-0.025*(v2*v2));
    tmp_sot_114 += (0.0020833333333333333*(v0*v0*v2));
    tmp_sot_114 += (0.0020833333333333333*(v1*v1*v0));
    tmp_sot_114 += (-0.004166666666666667*(v0*v2*v0));
    tmp_sot_114 += (0.0020833333333333333*(v0*v1*v1));
    MatrixXd tmp_sot_115 = (0.008333333333333333*(v2*v1));
    tmp_sot_115 += (-0.125*(v3*v0));
    tmp_sot_115 += (-0.008333333333333333*(v1*v2));
    tmp_sot_115 += (-0.010416666666666666*(v0*v0*v1));
    tmp_sot_115 += (-0.010416666666666666*(v1*v0*v0));
    tmp_sot_115 += (0.020833333333333332*(v0*v1*v0));
    tmp_sot_115 += (0.125*(v0*v3));
    MatrixXd tmp_sot_116 = (-0.125*(v0*v2));
    tmp_sot_116 += (0.125*(v2*v0));
    tmp_sot_116 += (-0.041666666666666664*(v1*v1));
    MatrixXd tmp_sot_117 = (-0.08333333333333333*(v1*v0));
    tmp_sot_117 += (0.08333333333333333*(v0*v1));
    tmp_sot_117 += (-2.5*v3);
    MatrixXd tmp_poly_108 = tmp_sot_109;
    tmp_poly_108 *= h;
    tmp_poly_108 += tmp_sot_110;
    tmp_poly_108 *= h;
    tmp_poly_108 += tmp_sot_111;
    tmp_poly_108 *= h;
    tmp_poly_108 += tmp_sot_112;
    tmp_poly_108 *= h;
    tmp_poly_108 += tmp_sot_113;
    tmp_poly_108 *= h;
    tmp_poly_108 += tmp_sot_114;
    tmp_poly_108 *= h;
    tmp_poly_108 += tmp_sot_115;
    tmp_poly_108 *= h;
    tmp_poly_108 += tmp_sot_116;
    tmp_poly_108 *= h;
    tmp_poly_108 += tmp_sot_117;
    tmp_poly_108 *= h*h*h*h*h;
    tH[3] = {tmp_poly_80, tmp_poly_91, tmp_poly_96, tmp_poly_108}; 
}
