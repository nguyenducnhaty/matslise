name: Build pyslise.whl

on:
  push:
    tags:
      - v3.*

jobs:
  build_wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-18.04, macos-10.15]
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]
    steps:
      - name: Cache Eigen3
        id: cache-eigen3_3
        uses: actions/cache@v1
        with:
          path: ../eigen
          key: ${{ runner.os }}-eigen3_3
      - name: Download Eigen3
        if: steps.cache-eigen3_3.outputs.cache-hit != 'true'
        run: |
          git clone https://gitlab.com/libeigen/eigen.git ../eigen
          cd ../eigen
          git checkout 3.3
          mkdir ../eigen/build
      - if: ${{startsWith(matrix.os, 'windows') && steps.cache-eigen3_3.outputs.cache-hit != 'true'}}
        name: Build Eigen3 (Windows)
        run: cmake -G "MinGW Makefiles" ..
        working-directory: ../eigen/build
      - if: ${{!startsWith(matrix.os, 'windows') && steps.cache-eigen3_3.outputs.cache-hit != 'true'}}
        name: Build Eigen3 (not Windows)
        run: cmake ..
        working-directory: ../eigen/build
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install setuptools wheel
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: "pybind/pybind11"
          path: "cmake/pybind11"
      - run: mkdir build
      - if: ${{startsWith(matrix.os, 'windows')}}
        name: CMake (Windows)
        run: |
          cmake -G "MinGW Makefiles" `
            -DCMAKE_BUILD_TYPE=Release `
            -DEigen3_DIR="$(resolve-path ../../eigen/build)" `
            -DPYBIND11_LTO_CXX_FLAGS="" ..
          cmake --build . --target build_wheel --config Release
        working-directory: ./build
        env:
          CXXFLAGS: "-DMS_WIN64=1 -D_hypot=hypot -static-libgcc -static"
          LDFLAGS: "-static"
      - if: ${{!startsWith(matrix.os, 'windows')}}
        name: CMake (not Windows)
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=Release \
            -DEigen3_DIR="$(pwd)/../../eigen/build" \
            -DPYTHON_EXECUTABLE=$(which python)
          cmake --build . --target build_wheel --config Release -- -j 3
        working-directory: ./build
      - uses: actions/upload-artifact@v2-preview
        with:
          name: pyslise_${{ matrix.os }}_${{ matrix.python-version }}
          path: ./build/src/dist/*.whl
  test_wheel:
    if: always()
    runs-on: ${{ matrix.os }}
    needs: build_wheel
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-18.04, macos-10.15]
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]
    steps:
      - uses: actions/download-artifact@v2-preview
        with:
          name: pyslise_${{ matrix.os }}_${{ matrix.python-version }}
          path: ../pyslise_wheel
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          pip install wheel
      - name: install pyslise
        if: ${{startsWith(matrix.os, 'windows')}}
        run: |
          pip install $(get-item ../pyslise_wheel/*.whl)
      - name: install pyslise
        if: ${{!startsWith(matrix.os, 'windows')}}
        run: |
          pip install ../pyslise_wheel/*.whl
      - uses: actions/checkout@v2
      - name: test pyslise
        run: |
          python test/pyslise/test_docs.py --verbose
